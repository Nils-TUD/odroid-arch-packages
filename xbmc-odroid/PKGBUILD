# vim:set ft=sh:
# Maintainer: BlackIkeEagle < ike DOT devolder AT gmail DOT com >
# Contributor: DonVla <donvla@users.sourceforge.net>
# Contributor: Ulf Winkelvos <ulf [at] winkelvos [dot] de>
# Contributor: Ralf Barth <archlinux dot org at haggy dot org>
# Contributor: B & monty - Thanks for your hints :)
# Contributor: marzoul
# Contributor: Sergej Pupykin <pupykin.s+arch@gmail.com>
# Contributor: Brad Fanella <bradfanella@archlinux.us>
# Contributor: [vEX] <niechift.dot.vex.at.gmail.dot.com>
# Contributor: Zeqadious <zeqadious.at.gmail.dot.com>
# Contributor: BartÅ‚omiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Maxime Gauduin <alucryd@gmail.com>
#
# Original credits go to Edgar Hucek <gimli at dark-green dot com>
# for his xbmc-vdpau-vdr PKGBUILD at https://archvdr.svn.sourceforge.net/svnroot/archvdr/trunk/archvdr/xbmc-vdpau-vdr/PKGBUILD

pkgname=xbmc-odroid
pkgver=20150326.7cc53a9
pkgrel=3
pkgdesc="Kodi 14.2 Helix for Odroid"
provides=('xbmc')
conflicts=('xbmc' 'xbmc-pulse' 'xbmc-svn')
replaces=('xbmc-svn')
arch=('armv7h')
url="http://kodi.tv"
license=('GPL2')
depends=(
'alsa-lib' 'attr' 'avahi' 'bluez-libs' 'bzip2' 'e2fsprogs' 'flac' 'freetype2' 'fribidi'
'gcc-libs' 'gnutls' 'glib2' 'glibc' 'gmp' 'graphite' 'harfbuzz' 'json-c' 'ldb' 'libasyncns'
'libbsd' 'libcap' 'libcdio' 'libdbus' 'libdrm' 'libffi' 'libgcrypt' 'libgpg-error'
'libjpeg-turbo' 'libldap' 'libmariadbclient' 'libmicrohttpd' 'libogg' 'libpng' 'libpulse'
'libsasl' 'libsndfile' 'libssh' 'libsystemd' 'libtasn1' 'libtiff' 'libusb' 'libva' 'libvorbis'
'libwbclient' 'libx11' 'libxau' 'libxcb' 'libxdmcp' 'libxext' 'libxfixes' 'libxml2' 'libxrandr'
'libxrender' 'libxslt' 'lz4' 'lzo' 'mesa' 'nettle' 'odroid-libgl-mali' 'openssl' 'p11-kit'
'pcre' 'python' 'python2' 'sdl' 'sdl_image' 'smbclient' 'sqlite' 'taglib' 'talloc' 'tdb'
'tevent' 'tinyxml' 'xz' 'yajl' 'zlib'
)
makedepends=(
'boost' 'cmake' 'doxygen' 'git' 'gperf' 'jasper'
'java-runtime' 'libnfs' 'libplist' 'nasm'
'swig' 'unzip' 'upower' 'zip'
)
optdepends=(
'gdb: for meaningful backtraces in case of trouble - STRONGLY RECOMMENDED'
'afpfs-ng: Apple shares support'
'libnfs: NFS shares support'
'libplist: AirPlay support'
'lirc: Remote controller support'
'pulseaudio: PulseAudio support'
'shairplay: AirPlay support'
'udisks: Automount external drives'
'unrar: Archives support'
'unzip: Archives support'
'upower: Display battery level'
)
install="$pkgname.install"
_commit=7cc53a9a3da77869d1d5d3d3d9971b4bd1641b50
source=(
	"git+https://github.com/xbmc/xbmc.git#tag=14.2-Helix"
)
sha256sums=(
	'SKIP'
)

_prefix='/usr/local'

pkgver() {
	cd "$srcdir/xbmc"
	# suggested by marzoul
	git log -1 --date=short --format="%cd.%h" | tr -d '-'
}

build() {
	cd xbmc

	# Bootstrapping
	./bootstrap

	# Configuring XBMC
	export PYTHON_VERSION="2.7"  # external python v2
	./configure --enable-codec=mfc \
		--enable-x11 \
		--enable-sdl \
		--enable-xrandr \
		--enable-neon \
		--enable-nfs \
		--disable-debug \
		--enable-optimizations \
		--enable-ccache \
		--enable-gles \
		--enable-non-free  \
		--disable-gl \
		--disable-vdpau \
		--disable-vaapi \
		--disable-crystalhd \
		--disable-openmax \
		--disable-rsxs \
		--disable-projectm \
		--disable-fishbmc \
		--enable-texturepacker \
		--with-cpu=cortex-a9 \
		--host=armv7a-hardfloat-linux-gnueabi 

	# Now (finally) build
	make
}

package() {
	cd xbmc

	# Running make install
	make DESTDIR="$pkgdir" install

	# Tools
	install -Dm755 $srcdir/xbmc/tools/TexturePacker/TexturePacker \
		${pkgdir}${_prefix}/lib/xbmc/

	# Licenses
	install -dm755 ${pkgdir}${_prefix}/share/licenses/${pkgname}
	for licensef in LICENSE.GPL copying.txt; do
		mv ${pkgdir}${_prefix}/share/doc/kodi/${licensef} \
			${pkgdir}${_prefix}/share/licenses/${pkgname}
	done
}
